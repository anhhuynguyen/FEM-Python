#######################################################################################################################
Beam
m = mesh.MeshBox(50, 5)
m.seed(ndx=90, ndy=9)
m.mesh()
d = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
s = np.array([[768,   2],
               [769,   2],
               [770,   2],
               [771,   2],
               [772,   2],
               [773,   2],
               [774,   2],
               [775,   2],
               [776,   2],
               [777,   2],
               [778,   2],
               [779,   2],
               [780,   2],
               [781,   2],
               [782,   2],
               [783,   2],
               [784,   2],
               [785,   2],
               [786,   2],
               [787,   2],
               [788,   2],
               [789,   2],
               [790,   2],
               [791,   2],
               [792,   2],
               [793,   2],
               [794,   2],
               [795,   2],
               [796,   2],
               [797,   2],
               [798,   2],
               [799,   2],
               [800,   2],
               [801,   2],
               [802,   2],
               [803,   2],
               [804,   2],
               [805,   2],
               [806,   2],
               [807,   2],
               [808,   2],
               [809,   2],
               [720,   2],
               [721,   2],
               [722,   2],
               [723,   2],
               [724,   2],
               [725,   2],
               [726,   2],
               [727,   2],
               [728,   2],
               [729,   2],
               [730,   2],
               [731,   2],
               [732,   2],
               [733,   2],
               [734,   2],
               [735,   2],
               [736,   2],
               [737,   2],
               [738,   2],
               [739,   2],
               [740,   2],
               [741,   2],
               [742,   2],
               [743,   2],
               [744,   2],
               [745,   2],
               [746,   2],
               [747,   2],
               [748,   2],
               [749,   2],
               [750,   2],
               [751,   2],
               [752,   2],
               [753,   2],
               [754,   2],
               [755,   2],
               [756,   2],
               [757,   2],
               [758,   2],
               [759,   2],
               [760,   2],
               [761,   2],
               [762,   2],
               [763,   2],
               [764,   2],
               [765,   2],
               [766,   2],
               [767,   2]])
h = solver.PlaneStress(m, [[(0, 0), d]], [], [[(0, -100), s]], [200e9, 0.3], 0.1)
h.steady_state_solver()
p = post.Post2D(h, m)
p.plot_disp(undeformed=(1, 1), deformed=(1, 1), ani=1, savefig=0, scale_factor=2,
                alpha=(0.8, 0.8), interval=500)
p.plot_stress(ani=True, limit_stress=250e6, scale_factor=20, frames=10, interval=1)
########################################################################################################################
Hollow Beam
    m = mesh.Mesh2D(20, 5)
    m.constraints = [2, 18, 1.5, 3.5]
    m.seed(5, 30, 5, 5, 5, 5)
    m.mesh()
    d = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])
    f = np.array([524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539])
    # h = solver.PlaneStress(m, [[(0, 0), d]], [[(100, 0), f]], [], [2.7e6, 0.3], 0.1)
    s = np.array([[159, 1],
                  [209, 1],
                  [249, 1],
                  [289, 1],
                  [329, 1],
                  [199, 1],
                  [369, 1],
                  [409, 1],
                  [219, 1],
                  [449, 1],
                  [239, 1],
                  [229, 1],
                  [39, 1],
                  [79, 1],
                  [119, 1]])
    h = solver.PlaneStress(m, [[(0, 0), d]], [], [[(100, 0), s]], [2.7e6, 0.3], 0.1)
    h.steady_state_solver()
    p = post.Post2D(h, m)
    p.plot_disp(undeformed=(1, 1), deformed=(1, 1), ani=True, savefig=0, scale_factor=1500,
                alpha=(0.8, 0.8), interval=300)
    p.plot_stress('y', scale_factor=2000)
########################################################################################################################
    Holllow Box
    m = mesh.Mesh2D(5, 5)
    m.constraints = [1, 4, 1, 4]
    m.seed(20, 50, 20, 20, 50, 20)
    m.mesh()
    d = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                  17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
                  34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
                  51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
                  68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,
                  85, 86, 87, 88, 89, 90])
    s = np.array([[5510, 2],
                  [5511, 2],
                  [5512, 2],
                  [5513, 2],
                  [5514, 2],
                  [5515, 2],
                  [5516, 2],
                  [5517, 2],
                  [5518, 2],
                  [5519, 2],
                  [5520, 2],
                  [5521, 2],
                  [5522, 2],
                  [5523, 2],
                  [5524, 2],
                  [5525, 2],
                  [5526, 2],
                  [5527, 2],
                  [5528, 2],
                  [5529, 2],
                  [5530, 2],
                  [5531, 2],
                  [5532, 2],
                  [5533, 2],
                  [5534, 2],
                  [5535, 2],
                  [5536, 2],
                  [5537, 2],
                  [5538, 2],
                  [5539, 2],
                  [5540, 2],
                  [5541, 2],
                  [5542, 2],
                  [5543, 2],
                  [5544, 2],
                  [5545, 2],
                  [5546, 2],
                  [5547, 2],
                  [5548, 2],
                  [5549, 2],
                  [5550, 2],
                  [5551, 2],
                  [5552, 2],
                  [5553, 2],
                  [5554, 2],
                  [5555, 2],
                  [5556, 2],
                  [5557, 2],
                  [5558, 2],
                  [5559, 2],
                  [5560, 2],
                  [5561, 2],
                  [5562, 2],
                  [5563, 2],
                  [5564, 2],
                  [5565, 2],
                  [5566, 2],
                  [5567, 2],
                  [5568, 2],
                  [5569, 2],
                  [5570, 2],
                  [5571, 2],
                  [5572, 2],
                  [5573, 2],
                  [5574, 2],
                  [5575, 2],
                  [5576, 2],
                  [5577, 2],
                  [5578, 2],
                  [5579, 2],
                  [5580, 2],
                  [5581, 2],
                  [5582, 2],
                  [5583, 2],
                  [5584, 2],
                  [5585, 2],
                  [5586, 2],
                  [5587, 2],
                  [5588, 2],
                  [5589, 2],
                  [5590, 2],
                  [5591, 2],
                  [5592, 2],
                  [5593, 2],
                  [5594, 2],
                  [5595, 2],
                  [5596, 2],
                  [5597, 2],
                  [5598, 2],
                  [5599, 2]])
    h = solver.PlaneStress(m, [[(0, 0), d]], [], [[(0, -1e8), s]], [200e9, 0.3], 0.1)
    h.steady_state_solver()
    p = post.Post2D(h, m)
    p.plot_disp(undeformed=(0, 0), deformed=(1, 1), ani=0, savefig=0, scale_factor=50,
                alpha=(0.8, 0.8), interval=50, frames=10)
    p.plot_stress(ani=True, limit_stress=250e6, scale_factor=20, frames=10, interval=1)
########################################################################################################################
    Thin-wall box
    m = mesh.Mesh2D(5, 5)
    m.constraints = [0.2, 4.8, 0.2, 4.8]
    m.seed(10, 240, 10, 10, 240, 10)
    m.mesh()
    d = np.array([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,
        13,  14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,
        26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,
        39,  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,
        52,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,
        65,  66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,
        78,  79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,
        91,  92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103,
       104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
       117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129,
       130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
       143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
       156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
       169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
       182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
       195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
       208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
       221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233,
       234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
       247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
       260])
    s = np.array([[9856,    2],
                   [9984,    2],
                   [9857,    2],
                   [9985,    2],
                   [9858,    2],
                   [9986,    2],
                   [9859,    2],
                   [9987,    2],
                   [9860,    2],
                   [9988,    2],
                   [9861,    2],
                   [9989,    2],
                   [9862,    2],
                   [9990,    2],
                   [9863,    2],
                   [9991,    2],
                   [9864,    2],
                   [9992,    2],
                   [9865,    2],
                   [9993,    2],
                   [9866,    2],
                   [9994,    2],
                   [9867,    2],
                   [9995,    2],
                   [9740,    2],
                   [9868,    2],
                   [9996,    2],
                   [9741,    2],
                   [9869,    2],
                   [9997,    2],
                   [9742,    2],
                   [9870,    2],
                   [9998,    2],
                   [9743,    2],
                   [9871,    2],
                   [9999,    2],
                   [9744,    2],
                   [9872,    2],
                   [9745,    2],
                   [9873,    2],
                   [9746,    2],
                   [9874,    2],
                   [9747,    2],
                   [9875,    2],
                   [9748,    2],
                   [9876,    2],
                   [9749,    2],
                   [9877,    2],
                   [9750,    2],
                   [9878,    2],
                   [9751,    2],
                   [9879,    2],
                   [9752,    2],
                   [9880,    2],
                   [9753,    2],
                   [9881,    2],
                   [9754,    2],
                   [9882,    2],
                   [9755,    2],
                   [9883,    2],
                   [9756,    2],
                   [9884,    2],
                   [9757,    2],
                   [9885,    2],
                   [9758,    2],
                   [9886,    2],
                   [9759,    2],
                   [9887,    2],
                   [9760,    2],
                   [9888,    2],
                   [9761,    2],
                   [9889,    2],
                   [9762,    2],
                   [9890,    2],
                   [9763,    2],
                   [9891,    2],
                   [9764,    2],
                   [9892,    2],
                   [9765,    2],
                   [9893,    2],
                   [9766,    2],
                   [9894,    2],
                   [9767,    2],
                   [9895,    2],
                   [9768,    2],
                   [9896,    2],
                   [9769,    2],
                   [9897,    2],
                   [9770,    2],
                   [9898,    2],
                   [9771,    2],
                   [9899,    2],
                   [9772,    2],
                   [9900,    2],
                   [9773,    2],
                   [9901,    2],
                   [9774,    2],
                   [9902,    2],
                   [9775,    2],
                   [9903,    2],
                   [9776,    2],
                   [9904,    2],
                   [9982,    2],
                   [9777,    2],
                   [9905,    2],
                   [9778,    2],
                   [9906,    2],
                   [9779,    2],
                   [9907,    2],
                   [9780,    2],
                   [9908,    2],
                   [9781,    2],
                   [9909,    2],
                   [9983,    2],
                   [9782,    2],
                   [9910,    2],
                   [9783,    2],
                   [9911,    2],
                   [9784,    2],
                   [9912,    2],
                   [9785,    2],
                   [9913,    2],
                   [9786,    2],
                   [9914,    2],
                   [9787,    2],
                   [9915,    2],
                   [9788,    2],
                   [9916,    2],
                   [9789,    2],
                   [9917,    2],
                   [9790,    2],
                   [9918,    2],
                   [9791,    2],
                   [9919,    2],
                   [9792,    2],
                   [9920,    2],
                   [9793,    2],
                   [9921,    2],
                   [9794,    2],
                   [9922,    2],
                   [9795,    2],
                   [9923,    2],
                   [9796,    2],
                   [9924,    2],
                   [9797,    2],
                   [9925,    2],
                   [9798,    2],
                   [9926,    2],
                   [9799,    2],
                   [9927,    2],
                   [9800,    2],
                   [9928,    2],
                   [9801,    2],
                   [9929,    2],
                   [9802,    2],
                   [9930,    2],
                   [9803,    2],
                   [9931,    2],
                   [9804,    2],
                   [9932,    2],
                   [9805,    2],
                   [9933,    2],
                   [9806,    2],
                   [9934,    2],
                   [9807,    2],
                   [9935,    2],
                   [9808,    2],
                   [9936,    2],
                   [9809,    2],
                   [9937,    2],
                   [9810,    2],
                   [9938,    2],
                   [9811,    2],
                   [9939,    2],
                   [9812,    2],
                   [9940,    2],
                   [9813,    2],
                   [9941,    2],
                   [9814,    2],
                   [9942,    2],
                   [9815,    2],
                   [9943,    2],
                   [9816,    2],
                   [9944,    2],
                   [9817,    2],
                   [9945,    2],
                   [9818,    2],
                   [9946,    2],
                   [9819,    2],
                   [9947,    2],
                   [9820,    2],
                   [9948,    2],
                   [9821,    2],
                   [9949,    2],
                   [9822,    2],
                   [9950,    2],
                   [9823,    2],
                   [9951,    2],
                   [9824,    2],
                   [9952,    2],
                   [9825,    2],
                   [9953,    2],
                   [9826,    2],
                   [9954,    2],
                   [9827,    2],
                   [9955,    2],
                   [9828,    2],
                   [9956,    2],
                   [9829,    2],
                   [9957,    2],
                   [9830,    2],
                   [9958,    2],
                   [9831,    2],
                   [9959,    2],
                   [9832,    2],
                   [9960,    2],
                   [9833,    2],
                   [9961,    2],
                   [9834,    2],
                   [9962,    2],
                   [9835,    2],
                   [9963,    2],
                   [9836,    2],
                   [9964,    2],
                   [9837,    2],
                   [9965,    2],
                   [9838,    2],
                   [9966,    2],
                   [9839,    2],
                   [9967,    2],
                   [9840,    2],
                   [9968,    2],
                   [9841,    2],
                   [9969,    2],
                   [9842,    2],
                   [9970,    2],
                   [9843,    2],
                   [9971,    2],
                   [9844,    2],
                   [9972,    2],
                   [9845,    2],
                   [9973,    2],
                   [9846,    2],
                   [9974,    2],
                   [9847,    2],
                   [9975,    2],
                   [9848,    2],
                   [9976,    2],
                   [9849,    2],
                   [9977,    2],
                   [9850,    2],
                   [9978,    2],
                   [9851,    2],
                   [9979,    2],
                   [9852,    2],
                   [9980,    2],
                   [9853,    2],
                   [9981,    2],
                   [9854,    2],
                   [9855,    2]])
    f = np.array([10216])
    h = solver.PlaneStress(m, [[(0, 0), d]], [[(-100, 0), f]], [[(0, 1000), s]], [2.7e9, 0.3], 0.1)
    h.steady_state_solver()
    p = post.Post2D(h, m)
    p.plot_disp(undeformed=(1, 1), deformed=(1, 1), ani=1, savefig=0, scale_factor=50,
                alpha=(0.8, 0.8), interval=500)
    p.plot_stress(ani=True, limit_stress=250e6, scale_factor=20, frames=10, interval=1)
########################################################################################################################
    # Tension plate
    m = mesh.Mesh2D(5, 10)
    m.seed(20, 0, 20, 40, 0, 40)
    m.mesh()
    d = np.array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,
       17, 18, 19, 20])
    s = np.array([[780,   2],
                   [781,   2],
                   [782,   2],
                   [783,   2],
                   [784,   2],
                   [785,   2],
                   [786,   2],
                   [787,   2],
                   [788,   2],
                   [789,   2],
                   [790,   2],
                   [791,   2],
                   [792,   2],
                   [793,   2],
                   [794,   2],
                   [795,   2],
                   [796,   2],
                   [797,   2],
                   [798,   2],
                   [799,   2]])
    h = solver.PlaneStress(m, [[(0, 0), d]], [], [[(0, 1e6), s]], [200e9, 0.3], 0.1)
    h.steady_state_solver()
    p = post.Post2D(h, m)
    p.plot_stress()
    ####################################################################################################################
    x1, y1 = 0, 0
    x2, y2 = 30, 3
    x3, y3 = 30, 8
    x4, y4 = 0, 8

    pts = np.array([
          [x1, y1], [x2, y2], [x3, y3], [x4, y4]])
    m = mesh.MeshBox(verts=pts)
    m.seed(ndx=50, ndy=20)
    m.mesh()
    d = np.array([0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])
    s = np.array([[960, 2],
                   [992, 2],
                   [961, 2],
                   [993, 2],
                   [962, 2],
                   [994, 2],
                   [963, 2],
                   [995, 2],
                   [964, 2],
                   [996, 2],
                   [965, 2],
                   [997, 2],
                   [966, 2],
                   [998, 2],
                   [967, 2],
                   [999, 2],
                   [968, 2],
                   [969, 2],
                   [970, 2],
                   [971, 2],
                   [972, 2],
                   [973, 2],
                   [974, 2],
                   [975, 2],
                   [976, 2],
                   [977, 2],
                   [978, 2],
                   [979, 2],
                   [980, 2],
                   [981, 2],
                   [950, 2],
                   [982, 2],
                   [951, 2],
                   [983, 2],
                   [990, 2],
                   [952, 2],
                   [984, 2],
                   [953, 2],
                   [985, 2],
                   [954, 2],
                   [986, 2],
                   [955, 2],
                   [987, 2],
                   [956, 2],
                   [988, 2],
                   [991, 2],
                   [957, 2],
                   [989, 2],
                   [958, 2],
                   [959, 2]])
    h = solver.PlaneStress(m, [[(0, 0), d]], [], [[(0, -1e3), s]], [200e9, 0.3], 0.1)
    h.mass_density = 7850
    h.Newmark(10, 0.1, gamma=0.55)
    # h.steady_state_solver()
    p = post.Post2D(h, m)
    p.disp_animation_2('y', 6e4, (1, 1), (0.9, 0.9), 'jet', interval=100)
    # p.plot_disp('y', scale_factor=1e5)
    ####################################################################################################################
    Column dynamic
    m = mesh.Mesh2D(5, 10)
    m.seed()
    m.mesh()
    d = np.array([0, 1, 2, 3, 4, 5])
    s = np.array([[20, 3],
                 [10, 3],
                 [15, 3],
                 [5, 3]])
    f = np.array([30])
    h = solver.PlaneStress(m, [[(0, 0), d]], [[(100, 0), f]], [], [200e9, 0.3], 1)
    h.mass_density = 7.85e3
    h.Newmark(300, 0.01, 0, 0, n=1, eps=1e-7)
    h.steady_state_solver()
    p = post.Post2D(h, m)
    p.disp_animation_2('mag', 2.6e7, (0, 0), (1, 1), (0.8, 0.8), 'jet', interval=100)
    p.plot_disp(scale_factor=1e8)