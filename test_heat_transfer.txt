    ####################################################################################################################
    # Hollow square
    m = mesh.Mesh2D(10, 10)
    m.constraints = [2, 8, 2, 8]
    m.seed(20, 50, 20, 20, 50, 20)
    m.mesh()
    high = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
                     11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
                     22, 23, 24, 25, 26, 27, 28, 29, 2078, 2079, 30,
                     31, 32, 34, 35, 36, 37, 33, 38, 41, 42, 43,
                     44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 4150,
                     4151, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
                     66, 64, 68, 69, 65, 67, 2120, 2121, 70, 71, 72,
                     73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
                     84, 85, 90, 91, 86, 87, 88, 89, 2162, 2163, 4241,
                     4242, 2204, 2205, 181, 182, 39, 2246, 2247, 40, 4332, 4333,
                     2288, 2289, 272, 273, 2330, 2331, 2372, 2373, 4423, 4424, 363,
                     364, 2414, 2415, 2456, 2457, 4514, 4515, 2498, 2499, 454, 455,
                     3758, 3759, 2540, 2541, 1728, 1729, 4605, 4606, 2582, 2583, 545,
                     546, 2624, 2625, 4696, 4697, 2666, 2667, 636, 637, 2708, 2709,
                     3800, 4787, 4788, 3801, 2750, 2751, 727, 728, 2792, 2793, 4878,
                     4879, 2834, 2835, 818, 819, 2876, 2877, 2918, 2919, 4969, 4970,
                     909, 910, 2960, 2961, 3002, 3003, 5060, 5061, 3044, 3045, 1000,
                     1001, 3086, 3087, 5151, 5152, 3128, 3129, 1091, 1092, 3170, 3171,
                     5242, 5243, 3212, 3213, 1182, 1183, 3254, 3255, 5333, 5334, 3296,
                     3297, 1273, 1274, 3338, 3339, 5424, 5425, 3380, 3381, 1364, 1365,
                     3422, 3423, 3464, 3465, 5515, 5516, 1455, 1456, 3506, 3507, 3548,
                     3549, 5606, 5607, 3590, 3591, 1546, 1547, 3632, 3633, 5697, 5698,
                     3674, 3675, 1637, 1638, 3716, 3717, 5788, 5789, 5790, 5791, 5792,
                     5793, 5794, 5795, 5796, 5797, 5798, 5799, 5800, 5801, 5802, 5803,
                     5804, 5805, 5806, 5807, 5808, 5809, 5810, 5811, 5812, 5813, 5814,
                     5815, 5816, 5817, 5818, 5819, 5820, 5821, 5822, 5823, 5824, 5825,
                     5826, 5827, 5828, 5829, 5830, 5831, 5832, 5833, 5834, 5835, 5836,
                     5837, 5838, 5839, 5840, 5841, 5842, 5843, 5844, 5845, 5846, 5847,
                     5848, 5849, 5850, 5851, 5852, 5853, 5854, 5855, 5856, 5857, 5858,
                     5859, 5860, 5861, 5862, 5863, 5864, 5865, 5866, 5867, 5868, 5869,
                     5870, 5871, 5872, 5873, 5874, 5875, 5876, 5877, 5878, 5879, 3842,
                     3843, 1819, 1820, 3884, 3885, 3926, 3927, 1910, 1911, 3968, 3969,
                     1952, 1953, 1994, 1995, 4059, 4060, 2036, 2037])
    low = np.array([2561, 2562, 2057, 2058, 3611, 3612, 3107, 3108, 2603, 2604, 2099,
                    2100, 3653, 3654, 3149, 3150, 2645, 2646, 2141, 2142, 3695, 3696,
                    3191, 3192, 3485, 2687, 2688, 3486, 2183, 2184, 2981, 3737, 3738,
                    3233, 3234, 2729, 2730, 2477, 2225, 2226, 3905, 3779, 3780, 1973,
                    3275, 1974, 3276, 2771, 2772, 3401, 2267, 2268, 3821, 3822, 2897,
                    3317, 3318, 2813, 2814, 2309, 2310, 2393, 3863, 3864, 3359, 3360,
                    2855, 2856, 2351, 2352, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
                    1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 3906,
                    1857, 1858, 1859, 1860, 1861, 1862, 1863, 3402, 1864, 1865, 1866,
                    1867, 1868, 1869, 1870, 2898, 1871, 1872, 1873, 1874, 1875, 1876,
                    1877, 2394, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1890, 1885,
                    1886, 1887, 1888, 1889, 3947, 3948, 3443, 3444, 2939, 2940, 2435,
                    2436, 1931, 1932, 3989, 3990, 3991, 3992, 3993, 3994, 3995, 3996,
                    3997, 3998, 3999, 4000, 4001, 4002, 4003, 4004, 4005, 2982, 4006,
                    4007, 4008, 4009, 4010, 4011, 4012, 2478, 4013, 4014, 4015, 4016,
                    4017, 4018, 4019, 4020, 4021, 4022, 4023, 4024, 4025, 4026, 4027,
                    4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036, 4037, 4038,
                    4039, 3528, 3527, 3023, 3024, 2519, 2520, 2015, 2016, 3569, 3570,
                    3065, 3066])
    ess = {150.: high, 0.: low}
    h = solver.HeatTransfer(m, ess, {}, {}, 5 * np.eye(2))
    h.steady_state_solver()
    h.timestep = 1
    h.mass_density = 10
    h.specific_heat = 5
    h.implicit_transient_solver(1, 50, 0)
    p = post.Post2D(h, m)
    p.plot_temp()
    p.plot_temp()
    p.plot_flux('x')
    p.plot_flux('y')
    p.plot_flux('mag')
    # p.plot_flux('x', average=0)
    # p.plot_flux('y', average=0)
    # p.plot_flux('mag', average=0)
    ####################################################################################################################
    # C shape
    m = mesh.Mesh2D(10, 10)
    m.constraints = [3, 10, 3, 7]
    m.seed(8, 15, 0, 8, 10, 8)
    m.mesh()
    high = np.array([320, 416, 512, 440, 392, 488, 368, 464, 344])
    low = np.array([191,  71, 167,  47, 143,  23, 119, 215,  95])
    ess = {0.: low, 100.: high}
    h = solver.HeatTransfer(m, ess, {}, {}, 5 * np.eye(2))
    h.steady_state_solver()
    p = post.Post2D(h, m)
    p.plot_temp()
    ####################################################################################################################
    # Square box
    m = mesh.MeshBox(10,10,ndx=50, ndy=50)
    m.seed()
    m.mesh()
    low = np.array([2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
                     2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
                     2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592,
                     2593, 2594, 2595, 2596, 2597, 2598, 2599, 2091, 1581, 1071, 561,
                     51, 2556, 2558, 1530, 2142, 1632, 1122, 612, 102, 2040, 2193,
                     1683, 1173, 663, 153, 2244, 1734, 1224, 714, 204, 2295, 1785,
                     1275, 765, 255, 2346, 1836, 1326, 816, 306, 2397, 1887, 1377,
                     867, 357, 2448, 1938, 1428, 918, 408, 2499, 1989, 1479, 969,
                     459, 2550, 2551, 2552, 2553, 2554, 2555, 1020, 2557, 510, 2559])
    high = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
              11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
              22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
              33, 34, 35, 36, 37, 38, 39, 2600, 40, 2090, 41,
              1580, 42, 1070, 43, 560, 44, 50, 45, 46, 47, 48,
              49, 2141, 1631, 1121, 611, 101, 2192, 1682, 1172, 662, 152,
              2243, 1733, 1223, 713, 203, 2294, 1784, 1274, 764, 254, 2345,
              1835, 1325, 815, 305, 2396, 1886, 1376, 866, 356, 2447, 1937,
              1427, 917, 407, 2498, 1988, 1478, 968, 458, 2549, 2039, 1529,
              1019, 509])
    ess = {0.:low, 100.: high}
    h = solver.HeatTransfer(m, ess, {}, {}, 5*np.eye(2))
    h.steady_state_solver()
    p = post.Post2D(h, m)
    p.plot_temp()
    ####################################################################################################################
    # L shape
    m = mesh.Mesh2D(10,10)
    m.constraints = [4, 10, 4, 10]
    m.seed(20, 30, 0, 20, 30, 0)
    m.mesh()
    sink = np.array([ 917,  662,  407,  152, 1070,  815,  560,  305,   50,  968,  713,
        458,  203,  866,  611,  356,  101, 1019,  764,  509,  254])
    flux_area = np.array([[1580,    2],
                           [1581,    2],
                           [1582,    2],
                           [1583,    2],
                           [1584,    2],
                           [1585,    2],
                           [1586,    2],
                           [1587,    2],
                           [1588,    2],
                           [1589,    2],
                           [1590,    2],
                           [1591,    2],
                           [1592,    2],
                           [1593,    2],
                           [1594,    2],
                           [1595,    2],
                           [1596,    2],
                           [1597,    2],
                           [1598,    2],
                           [1599,    2]])
    h = solver.HeatTransfer(m, {0.: sink}, {10: flux_area}, {}, 5*np.eye(2))
    h.steady_state_solver()
    p = post.Post2D(h, m)
    p.plot_temp()
    ####################################################################################################################
    m = mesh.MeshBox(5, 5)
    m.seed(ndx=30,ndy=30)
    m.mesh()
    inflow = np.array([[  0,   3],
                       [480,   3],
                       [450,   3],
                       [420,   3],
                       [390,   3],
                       [870,   3],
                       [360,   3],
                       [840,   3],
                       [330,   3],
                       [810,   3],
                       [300,   3],
                       [780,   3],
                       [270,   3],
                       [750,   3],
                       [240,   3],
                       [720,   3],
                       [210,   3],
                       [690,   3],
                       [180,   3],
                       [660,   3],
                       [150,   3],
                       [630,   3],
                       [120,   3],
                       [600,   3],
                       [ 90,   3],
                       [ 30,   3],
                       [570,   3],
                       [ 60,   3],
                       [540,   3],
                       [510,   3]])
    outflow = np.array([[449,   1],
                       [419,   1],
                       [899,   1],
                       [389,   1],
                       [869,   1],
                       [359,   1],
                       [839,   1],
                       [329,   1],
                       [809,   1],
                       [299,   1],
                       [779,   1],
                       [269,   1],
                       [749,   1],
                       [239,   1],
                       [719,   1],
                       [209,   1],
                       [689,   1],
                       [179,   1],
                       [659,   1],
                       [149,   1],
                       [629,   1],
                       [119,   1],
                       [599,   1],
                       [ 89,   1],
                       [569,   1],
                       [ 59,   1],
                       [539,   1],
                       [ 29,   1],
                       [509,   1],
                       [479,   1]])
    high = np.array([898, 774, 650, 526, 402, 278, 154,  30, 929, 805, 681, 557, 433,
       309, 185,  61, 960, 836, 712, 588, 464, 340, 216,  92, 867, 743,
       619, 495, 371, 247, 123])
    low = np.array([0, 899, 775, 651, 527, 403, 279, 155,  31, 930, 806, 682, 558,
       434, 310, 186,  62, 837, 713, 589, 465, 341, 217,  93, 868, 744,
       620, 496, 372, 248, 124])
    ess = {0.:low, 100.: high}
    flux = {10: inflow, -30: outflow}
    h = solver.HeatTransfer(m, ess, flux, {}, np.eye(2) * 5)
    h.steady_state_solver()
    p = post.Post2D(h, m)
    p.plot_temp()
    p.plot_flux()
    ####################################################################################################################
    m = mesh.MeshBox(5, 5)
    m.seed(ndx=30, ndy=30)
    m.mesh()
    low = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
                    13, 14, 527, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
                    25, 26, 27, 28, 29, 30, 31, 558, 62, 589, 93, 620, 124, 651,
                    155, 682, 186, 713, 217, 744, 248, 775, 279, 806, 310, 837, 341,
                    868, 372, 899, 403, 930, 931, 932, 933, 934, 935, 936, 937, 938,
                    939, 940, 941, 942, 943, 944, 945, 434, 946, 947, 948, 949, 950,
                    951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 465, 496])
    conv = np.array([[896, 2],
                     [897, 2],
                     [898, 2],
                     [899, 2],
                     [870, 2],
                     [871, 2],
                     [872, 2],
                     [873, 2],
                     [874, 2],
                     [875, 2],
                     [876, 2],
                     [877, 2],
                     [878, 2],
                     [879, 2],
                     [880, 2],
                     [881, 2],
                     [882, 2],
                     [883, 2],
                     [884, 2],
                     [885, 2],
                     [886, 2],
                     [887, 2],
                     [888, 2],
                     [889, 2],
                     [890, 2],
                     [891, 2],
                     [892, 2],
                     [893, 2],
                     [894, 2],
                     [895, 2]])
    ess = {0: low}
    cf = {20.: conv}
    h = solver.HeatTransfer(m, ess, {}, {}, np.array([[5, 0], [0, 5]]), boundary_convection=cf, ambient_temp=200)
    # h.steady_state_solver()
    h.mass_density = 10
    h.specific_heat = 5
    h.timestep = 1
    h.implicit_transient_solver(1, 1200, eps=1e-3)
    p = post.Post2D(h, m)
    p.plot_temp()
    p.plot_flux('y', average=0)
    p.plot_flux('x', average=0)
    ####################################################################################################################
    m = mesh.Mesh2D(60, 15)
    m.constraints = [5, 10, 5, 10]
    m.seed(5, 5, 20, 5, 5, 5)
    m.mesh()
    inflow = np.array([[0, 3],
                       [120, 3],
                       [200, 3],
                       [335, 3],
                       [225, 3],
                       [305, 3],
                       [90, 3],
                       [250, 3],
                       [275, 3],
                       [395, 3],
                       [60, 3],
                       [365, 3],
                       [150, 3],
                       [30, 3],
                       [175, 3]])
    convect = np.array([[224, 1],
                        [304, 1],
                        [424, 1],
                        [89, 1],
                        [249, 1],
                        [334, 1],
                        [274, 1],
                        [199, 1],
                        [394, 1],
                        [59, 1],
                        [364, 1],
                        [149, 1],
                        [29, 1],
                        [174, 1],
                        [119, 1]])
    flux = {1000: inflow}
    conv = {2000: convect}
    h = solver.HeatTransfer(m, {}, flux, {}, np.array([[3000, 0], [0, 3000]]), boundary_convection=conv, ambient_temp=0)
    # h.steady_state_solver()
    h.timestep = 1
    h.mass_density = 5
    h.specific_heat = 10
    h.implicit_transient_solver(1, 1200, 0, eps=1e-3)
    p = post.Post2D(h, m)
    p.plot_temp()
    p.plot_flux('x', meshon=True, average=0)

    ####################################################################################################################
    m = mesh.MeshBox(10, 10)
    m.seed(ndx=100, ndy=100)
    m.mesh()
    conv = np.array([[9984, 2],
                     [9985, 2],
                     [9986, 2],
                     [9987, 2],
                     [9988, 2],
                     [9989, 2],
                     [9990, 2],
                     [9991, 2],
                     [9992, 2],
                     [9993, 2],
                     [9994, 2],
                     [9995, 2],
                     [9996, 2],
                     [9997, 2],
                     [9998, 2],
                     [9999, 2],
                     [9900, 2],
                     [9901, 2],
                     [9902, 2],
                     [9903, 2],
                     [9904, 2],
                     [9905, 2],
                     [9906, 2],
                     [9907, 2],
                     [9908, 2],
                     [9909, 2],
                     [9910, 2],
                     [9911, 2],
                     [9912, 2],
                     [9913, 2],
                     [9914, 2],
                     [9915, 2],
                     [9916, 2],
                     [9917, 2],
                     [9918, 2],
                     [9919, 2],
                     [9920, 2],
                     [9921, 2],
                     [9922, 2],
                     [9923, 2],
                     [9924, 2],
                     [9925, 2],
                     [9926, 2],
                     [9927, 2],
                     [9928, 2],
                     [9929, 2],
                     [9930, 2],
                     [9931, 2],
                     [9932, 2],
                     [9933, 2],
                     [9934, 2],
                     [9935, 2],
                     [9936, 2],
                     [9937, 2],
                     [9938, 2],
                     [9939, 2],
                     [9940, 2],
                     [9941, 2],
                     [9942, 2],
                     [9943, 2],
                     [9944, 2],
                     [9945, 2],
                     [9946, 2],
                     [9947, 2],
                     [9948, 2],
                     [9949, 2],
                     [9950, 2],
                     [9951, 2],
                     [9952, 2],
                     [9953, 2],
                     [9954, 2],
                     [9955, 2],
                     [9956, 2],
                     [9957, 2],
                     [9958, 2],
                     [9959, 2],
                     [9960, 2],
                     [9961, 2],
                     [9962, 2],
                     [9963, 2],
                     [9964, 2],
                     [9965, 2],
                     [9966, 2],
                     [9967, 2],
                     [9968, 2],
                     [9969, 2],
                     [9970, 2],
                     [9971, 2],
                     [9972, 2],
                     [9973, 2],
                     [9974, 2],
                     [9975, 2],
                     [9976, 2],
                     [9977, 2],
                     [9978, 2],
                     [9979, 2],
                     [9980, 2],
                     [9981, 2],
                     [9982, 2],
                     [9983, 2]])
    low = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8,
                    9, 10, 11, 12, 13, 14, 15, 16, 17,
                    18, 19, 20, 21, 22, 23, 24, 25, 26,
                    27, 28, 29, 30, 31, 32, 33, 34, 35,
                    36, 37, 38, 39, 40, 41, 42, 43, 44,
                    45, 46, 47, 48, 49, 50, 51, 52, 53,
                    54, 55, 56, 57, 58, 59, 60, 61, 62,
                    63, 64, 65, 66, 67, 68, 69, 70, 71,
                    72, 73, 74, 75, 76, 77, 78, 79, 80,
                    81, 82, 83, 84, 85, 86, 87, 88, 89,
                    90, 91, 92, 93, 94, 95, 96, 97, 98,
                    99, 100, 101, 606, 7777, 7272, 10193, 10196, 6767,
                    10199, 6262, 10200, 5757, 5252, 4747, 9797, 4242, 3737,
                    10182, 9292, 3232, 2727, 9898, 2222, 9393, 8787, 1717,
                    8888, 1212, 8383, 707, 8282, 7878, 202, 7373, 6868,
                    6363, 10119, 5858, 10194, 5353, 4848, 7171, 10123, 4343,
                    3838, 6666, 10126, 3333, 2828, 9999, 2323, 6161, 9494,
                    1818, 8989, 1313, 10132, 8484, 10133, 808, 5656, 7979,
                    303, 7474, 6969, 5151, 6464, 5959, 10140, 10189, 5454,
                    4646, 4949, 4444, 3939, 4141, 10190, 3434, 10147, 10191,
                    2929, 10100, 10101, 3636, 10102, 2424, 10103, 10104, 9595,
                    10105, 10106, 10107, 1919, 10108, 10109, 9090, 10110, 10111,
                    10112, 1414, 10113, 10114, 3131, 8585, 10115, 10116, 909,
                    10117, 10118, 8080, 10120, 10121, 10122, 404, 10124, 10125,
                    7575, 10127, 10128, 10129, 10130, 10131, 2626, 7070, 10134,
                    10135, 10136, 10137, 10138, 10139, 6565, 10141, 10142, 10143,
                    10144, 10145, 10146, 6060, 10148, 10149, 10150, 2121, 10152,
                    10153, 5555, 10155, 10156, 10157, 10158, 10159, 10160, 5050,
                    10161, 10162, 10163, 10165, 10166, 10167, 4545, 10164, 1616,
                    10171, 10172, 10173, 10174, 4040, 10176, 10177, 10178, 10151,
                    10180, 10181, 3535, 10183, 10184, 10185, 10186, 10187, 10188,
                    1111, 3030, 10168, 10179, 10154, 10169, 10195, 2525, 10197,
                    10198, 9696, 10170, 2020, 9191, 10175, 10192, 1515, 8686,
                    1010, 8181, 505, 7676])
    ess = {100.: low}
    conve = {200: conv}
    h = solver.HeatTransfer(m, ess, {}, {}, np.array([[5, 0], [0, 5]]), boundary_convection=conve, ambient_temp=0)
    h.mass_density = 10
    h.specific_heat = 5
    h.timestep = 0.5
    h.implicit_transient_solver(1, 50, 0)
    p = post.Post2D(h, m)
    p.plot_temp()
    # p.plot_flux('y', average=0)
    # p.plot_flux('x', average=0)
    ####################################################################################################################
    m = mesh.MeshBox(0.6, 1)
    m.seed(ndx=60, ndy=100)
    m.mesh()
    conv = {750: np.array([[899, 1],
                        [2819, 1],
                        [4739, 1],
                        [1799, 1],
                        [3719, 1],
                        [5639, 1],
                        [779, 1],
                        [2699, 1],
                        [4619, 1],
                        [1679, 1],
                        [3599, 1],
                        [5519, 1],
                        [659, 1],
                        [2579, 1],
                        [4499, 1],
                        [1559, 1],
                        [3479, 1],
                        [5399, 1],
                        [539, 1],
                        [2459, 1],
                        [4379, 1],
                        [1439, 1],
                        [3359, 1],
                        [5279, 1],
                        [419, 1],
                        [2339, 1],
                        [4259, 1],
                        [1319, 1],
                        [3239, 1],
                        [5159, 1],
                        [299, 1],
                        [2219, 1],
                        [4139, 1],
                        [1199, 1],
                        [3119, 1],
                        [5039, 1],
                        [5759, 1],
                        [179, 1],
                        [2099, 1],
                        [4019, 1],
                        [5939, 1],
                        [5940, 2],
                        [5941, 2],
                        [5942, 2],
                        [1079, 1],
                        [5943, 2],
                        [2999, 1],
                        [4919, 1],
                        [5944, 2],
                        [5945, 2],
                        [5946, 2],
                        [59, 1],
                        [5947, 2],
                        [1979, 1],
                        [3899, 1],
                        [5819, 1],
                        [5948, 2],
                        [5949, 2],
                        [5950, 2],
                        [959, 1],
                        [5951, 2],
                        [2879, 1],
                        [4799, 1],
                        [5952, 2],
                        [5953, 2],
                        [5954, 2],
                        [1859, 1],
                        [5955, 2],
                        [3779, 1],
                        [5699, 1],
                        [5956, 2],
                        [5957, 2],
                        [5958, 2],
                        [839, 1],
                        [5959, 2],
                        [2759, 1],
                        [4679, 1],
                        [5960, 2],
                        [5961, 2],
                        [5962, 2],
                        [1739, 1],
                        [5963, 2],
                        [3659, 1],
                        [5579, 1],
                        [5964, 2],
                        [5965, 2],
                        [5966, 2],
                        [719,  1],
                        [5967, 2],
                        [2639, 1],
                        [4559, 1],
                        [5968, 2],
                        [5969, 2],
                        [5970, 2],
                        [1619, 1],
                        [5971, 2],
                        [3539, 1],
                        [5459, 1],
                        [5972, 2],
                        [5973, 2],
                        [5974, 2],
                        [599,  1],
                        [5975, 2],
                        [2519, 1],
                        [4439, 1],
                        [5976, 2],
                        [5977, 2],
                        [5978, 2],
                        [1499, 1],
                        [5979, 2],
                        [3419, 1],
                        [5339, 1],
                        [5980, 2],
                        [5981, 2],
                        [5982, 2],
                        [479,  1],
                        [5983, 2],
                        [2399, 1],
                        [4319, 1],
                        [5984, 2],
                        [5985, 2],
                        [5986, 2],
                        [1379, 1],
                        [5987, 2],
                        [3299, 1],
                        [5219, 1],
                        [5988, 2],
                        [5989, 2],
                        [5990, 2],
                        [359,  1],
                        [5991, 2],
                        [2279, 1],
                        [4199, 1],
                        [5992, 2],
                        [5993, 2],
                        [5994, 2],
                        [1259, 1],
                        [5995, 2],
                        [3179, 1],
                        [5099, 1],
                        [5996, 2],
                        [5997, 2],
                        [5998, 2],
                        [239,  1],
                        [5999, 2],
                        [2159, 1],
                        [4079, 1],
                        [5999, 1],
                        [1139, 1],
                        [3059, 1],
                        [4979, 1],
                        [3839, 1],
                        [119,  1],
                        [2039, 1],
                        [3959, 1],
                        [5879, 1],
                        [1019, 1],
                        [2939, 1],
                        [4859, 1],
                        [1919, 1]])}
    ess = {100.0: np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                            17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
                            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
                            51, 52, 53, 54, 55, 56, 57, 58, 59, 60])}
    h = solver.HeatTransfer(m, ess, {}, {}, 52 * np.eye(2), boundary_convection=conv, ambient_temp=236)
    h.steady_state_solver()
    h.mass_density = 7850
    h.specific_heat = 447
    h.timestep = 1
    p = post.Post2D(h, m)
    p.plot_temp(meshon=0, fit=1)
